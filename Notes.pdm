## 1 Byte bit convertion
- 1 byte = 8 bits
- 1 ushort = 16 bits = 2 bytes. 
- 1 u_char = 8 bits = 1 byte.


# TODO
- 1 Mirar todos los tipos de dato utilizados en las estructuras de IPv4, MAC, Headers, etc para ver 
que cada campo tiene un tipo de dato con tamaño correspondiente.

- 2 Mirar checksum, ver si la tira de caracteres tiene que estar alineada a 16 bits o no. Petterson pagina 94
sección 2.4.2

- 3 Hacer que la capa IP pueda trabajar tanto con paquetes UDP como TCP.


# Minuta reunión 27/01/2017
- 1 El campo interfaz aparece en distintos lugares como parte de la tabla de routing, lo cual en realidad
proviene del hecho de que creo que ambas tablas (forwarding and routing tables) las implementan como una sola.
Pero la pregunta es: de donde se supone que se aprende la interfaz. Utilizando ARP no se aprende y no dice como se
obtiene. Segun Peterson pagina 240 en la seccion 3.3 Routing dice:

"The forwarding table is used when a packet is being forwarded and so must
contain enough information to accomplish the forwarding function. This
means that a row in the forwarding table contains the mapping from a
network prefix to an outgoing interface and some MAC information, such
as the Ethernet address of the next hop"

- R En la forwarding table del router, la interfaz se usa para saber por que interfaz se llega al nextHop

- 2 La interfaz es elegida en la capa IP (en TCP/IP), ̉¿lo mismo vale en este modelo? ¿implementamos un modelo
de capa 2 por cada interfaz? Actualmente no estoy utilizando el campo IPv4 interfaz.

- R Si: La interfaz se maneeja en capa tres y para cada interfaz hay un modelo de capa 2

- 3 No logro ver si hay un timeout en ARP para cuanto tiempo se queda esperando y en tiempo de que se 
acabe el tiempo cual es el error que se produce. O si se queda al eterno esperando la mac de una IP
para un paquete.

- R SI. implementaremos un timeout que si se alcanza se envia un error a la capa superior.
- R Por otro lado, las entradas cacheadas en la ARP table duran un cierto tiempo (15 min en general) y luego se borran

- 4 ¿Es correcto poner ARP este en capa 3? o ¿prefiere que esté en capa 2?. Se supone que es lo que 
se dice que está en capa 2.5. Ver donde prefiere Rodrigo que esté y en tal caso de que esta bién en capa 3
ver si está bien que la capa 3 envie link::Frames o si esos frames se deberian crear en capa 2.

- R Implementamos ARP como una funcionalidad compartida entre capa 3 y capa 2, la capa 3 solo sabe si
la capa 2 tiene o no la MAC adrress resuelta, en caso de que no sea asi, le pide que la resuelva antes de enviarle 
el packete.


## Preguntas (discuciones) pendientes

- 1 Por la red se pueden enviar distintos packetes, ARP, IP, etc. No encuentro cual es el mecanismo mediante
el cual se indica cual de todos es para castear correctamente la información entrante.

- 2 actualmente estoy usando el campo preamble del link::Frame como header donde guardo los datos del header de SWP
y tambien donde indico si es un ARP o IP packet. Esto lo inventé yo ya que no encuentro bien donde es que va 
esa información, a la misma vez tampoco encontre para que está el preamble y entonces lo use para estas cosas.

- 3 que pasa con las capas mas bajas cuando le llegan packetes de capas mas altas con distintos headers y por ende 
tal vez con distintos tamaños, deberia manejarse esto de alguna manera especial? No encontré info al respecto y el 
modelo como implemento un solo protocolo para cada capa esta como "Hardcodeado", no esta literalmente hardcodeado pero
se asume el tipo de cada paquete. Lo mejor que pense, es que para cada capa superior puede haber un modelo distinto donde los packetes 
de la capa superior se convierten en un parametro template del modelo, por desgracia PowerDEVS no permite tener modelos templates. 